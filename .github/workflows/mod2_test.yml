name: test mod2

on:
  pull_request:
    branches:
      - main
      - synchronize
    types:
      - opened
    paths:
      - "mod2/**"
  workflow_dispatch:

defaults:
  run:
    shell: bash -euo pipefail {0}
    working-directory: ./mod2

jobs:
  golangci-lint-with-reviewdog:
    name: run golangci-lint
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v5
        id: setup-go
        with:
          go-version-file: "./mod2/go.mod"
      - name: download go mod
        if: ${{ steps.setup-go.outputs.cache-hit != 'true' }}
        run: |
          go mod download
      - name: run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          working-directory: ./mod2
          args: --config "${{ github.workspace }}/.golangci.yml"
          install-mode: binary
      #- name: golangci-lint
      #  uses: reviewdog/action-golangci-lint@v2
      #  with:
      #    github_token: ${{ github.token }}
      #    golangci_lint_flags: "--config ${{ github.workspace }}/.golangci.yml"
      #    go_version_file: "go.mod"
      #    reporter: github-pr-review
      #    level: warning
      #    filter_mode: nofilter
      #    workdir: ./mod2

  govulncheck:
    name: run govulncheck
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v5
        id: setup-go
        with:
          go-version-file: "./mod2/go.mod"
      - name: download go mod
        if: ${{ steps.setup-go.outputs.cache-hit != 'true' }}
        run: |
          go mod download
      - name: run govulncheck
        run: |
          go run golang.org/x/vuln/cmd/govulncheck@latest ./...

  go-test:
    name: run go test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: setup go
        uses: actions/setup-go@v5
        id: setup-go
        with:
          go-version-file: "./mod2/go.mod"
      - name: download go mod
        if: ${{ steps.setup-go.outputs.cache-hit != 'true' }}
        run: |
          go mod download
      - name: run go test
        run: |
          go test -v ./...
